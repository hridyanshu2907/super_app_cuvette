{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adityakumargupta/Desktop/cuvette/codes/Capstone project 1/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/adityakumargupta/Desktop/cuvette/codes/Capstone project 1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/adityakumargupta/Desktop/cuvette/codes/Capstone project 1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import axios from\"axios\";import'./WeatherCard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function WeatherCard(){var api_key_weather=\"4748cb98543c48d4b22132702231404\";var location=\"Chennai\";var _useState=useState([]),_useState2=_slicedToArray(_useState,2),info=_useState2[0],setInfo=_useState2[1];function tConvert(time){// Check correct time format and split into components\ntime=time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/)||[time];if(time.length>1){// If time format correct\ntime=time.slice(1);// Remove full string match value\ntime[5]=+time[0]<12?' AM':' PM';// Set AM/PM\ntime[0]=+time[0]%12||12;// Adjust hours\n}return time.join('');// return adjusted time or original string\n}function getWeather(){return _getWeather.apply(this,arguments);}function _getWeather(){_getWeather=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,d,season,wind,pressure,humid,timeAndDate,time,date,temp,icon,h,isDayTime,i,_i;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"http://api.weatherapi.com/v1/current.json?key=\".concat(api_key_weather,\"&q=\").concat(location,\"&aqi=no\"));case 3:response=_context.sent;d=response.data;season=d.current.condition.text;wind=d.current.wind_kph;pressure=d.current.pressure_mb;humid=d.current.humidity;timeAndDate=d.location.localtime.split(\" \");time=tConvert(timeAndDate[1]);date=timeAndDate[0].substring(5).concat(\"-\",timeAndDate[0].substring(0,4));temp=d.current.temp_c;h=new Date().getHours();isDayTime=h>6&&h<20;_context.next=17;return axios.get('https://www.weatherapi.com/docs/weather_conditions.json');case 17:response=_context.sent;d=response.data;if(isDayTime===true){for(i=0;i<47;i++){if(d[i].day===season)icon=\"day/\".concat(d[i].icon,\".png\");}}else{for(_i=0;_i<47;_i++){if(d[_i].night===season)icon=\"night/\".concat(d[_i].icon,\".png\");}}setInfo([season,wind,pressure,humid,time,date,temp,icon]);// console.log(info);\n_context.next=26;break;case 23:_context.prev=23;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 26:case\"end\":return _context.stop();}},_callee,null,[[0,23]]);}));return _getWeather.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"weather-card\",onLoad:getWeather,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dateAndTime\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"date\",children:info[5]}),/*#__PURE__*/_jsx(\"p\",{className:\"time\",children:info[4]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"season\",children:[/*#__PURE__*/_jsx(\"img\",{src:info[7],alt:\"\",className:\"season-icon\"}),/*#__PURE__*/_jsx(\"p\",{className:\"season-name\",children:info[0]})]}),/*#__PURE__*/_jsx(\"img\",{src:\"line.png\",alt:\"\",className:\"line\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tempAndPressure\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"temp\",children:[info[6],\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pressureAndIcon\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"pressure.png\",alt:\"\",className:\"pressure-icon\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"pressure-value\",children:[info[2],\" mbar \",/*#__PURE__*/_jsx(\"br\",{}),\" Pressure\"]})]})]}),/*#__PURE__*/_jsx(\"img\",{src:\"line.png\",alt:\"\",className:\"line\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"windAndHumidity\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"wind\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"wind.png\",alt:\"\",className:\"wind-icon\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"wind-value\",children:[info[1],\" km/h \",/*#__PURE__*/_jsx(\"br\",{}),\"Wind\",\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"humidity\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"humid.png\",alt:\"\",className:\"humid-icon\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"humid-value\",children:[info[3],\"% \",/*#__PURE__*/_jsx(\"br\",{}),\"Humidity\",\" \"]})]})]})]})]});}","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","WeatherCard","api_key_weather","location","_useState","_useState2","_slicedToArray","info","setInfo","tConvert","time","toString","match","length","slice","join","getWeather","_getWeather","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","d","season","wind","pressure","humid","timeAndDate","date","temp","icon","h","isDayTime","i","_i","wrap","_callee$","_context","prev","next","get","concat","sent","data","current","condition","text","wind_kph","pressure_mb","humidity","localtime","split","substring","temp_c","Date","getHours","day","night","t0","console","log","stop","className","onLoad","children","src","alt"],"sources":["/Users/adityakumargupta/Desktop/cuvette/codes/Capstone project 1/src/Components/HomePage/WeatherCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './WeatherCard.css';\n\nexport default function WeatherCard() {\n  const api_key_weather = \"4748cb98543c48d4b22132702231404\";\n  const location = \"Chennai\";\n  let [info, setInfo] = useState([]);\n  function tConvert (time) {\n    // Check correct time format and split into components\n    time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n  \n    if (time.length > 1) { // If time format correct\n      time = time.slice (1);  // Remove full string match value\n      time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n      time[0] = +time[0] % 12 || 12; // Adjust hours\n    }\n    return time.join (''); // return adjusted time or original string\n  }\n\n  async function getWeather() {\n    try {\n      let response = await axios.get(`http://api.weatherapi.com/v1/current.json?key=${api_key_weather}&q=${location}&aqi=no`);\n      let d = response.data;\n      let season = d.current.condition.text;\n      let wind = d.current.wind_kph;\n      let pressure = d.current.pressure_mb;\n      let humid = d.current.humidity;\n      let timeAndDate = d.location.localtime.split(\" \");\n      let time = tConvert(timeAndDate[1]);\n      let date = timeAndDate[0].substring(5).concat(\"-\",timeAndDate[0].substring(0,4));\n      let temp = d.current.temp_c;\n      let icon;\n      let h = new Date().getHours();\n      let isDayTime = h > 6 && h < 20;\n      response = await axios.get('https://www.weatherapi.com/docs/weather_conditions.json');\n      d = response.data;\n\n      if (isDayTime === true){\n        for(let i = 0; i < 47; i++){\n          if (d[i].day  === season) icon = `day/${d[i].icon}.png`;\n        }\n      }\n      else{\n        for(let i = 0; i < 47; i++){\n          if (d[i].night  === season) icon = `night/${d[i].icon}.png`;\n        }\n      }\n      setInfo([season,wind,pressure,humid,time,date,temp,icon]);\n      // console.log(info);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className=\"weather-card\" onLoad={getWeather}>\n      <div className=\"dateAndTime\">\n        <p className=\"date\">{info[5]}</p>\n        <p className=\"time\">{info[4]}</p>\n      </div>\n      <div className=\"info\">\n        <div className=\"season\">\n          <img src={info[7]} alt=\"\" className=\"season-icon\" />\n          <p className=\"season-name\">{info[0]}</p>\n        </div>\n        <img src=\"line.png\" alt=\"\" className=\"line\" />\n        <div className=\"tempAndPressure\">\n          <p className=\"temp\">{info[6]}Â°C</p>\n          <div className=\"pressureAndIcon\">\n            <img src=\"pressure.png\" alt=\"\" className=\"pressure-icon\" />\n            <p className=\"pressure-value\">\n              {info[2]} mbar <br /> Pressure\n            </p>\n          </div>\n        </div>\n        <img src=\"line.png\" alt=\"\" className=\"line\" />\n        <div className=\"windAndHumidity\">\n          <div className=\"wind\">\n            <img src=\"wind.png\" alt=\"\" className=\"wind-icon\" />\n            <p className=\"wind-value\">\n              {info[1]} km/h <br />\n              Wind{\" \"}\n            </p>\n          </div>\n          <div className=\"humidity\">\n            <img src=\"humid.png\" alt=\"\" className=\"humid-icon\" />\n            <p className=\"humid-value\">\n              {info[3]}% <br />\n              Humidity{\" \"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}